/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { BaseContractAPI } from '@reflexer-finance/geb-contract-base'
import { MulticallRequest } from '@reflexer-finance/geb-contract-base'
import { TransactionRequest } from '@reflexer-finance/geb-contract-base'
import { BytesLike } from '@ethersproject/bytes'
import { BigNumberish } from '@ethersproject/bignumber'
import { BigNumber } from '@ethersproject/bignumber'

export class GebPrintingPermissions extends BaseContractAPI {
    AUCTION_HOUSE_TYPE(): Promise<string>
    AUCTION_HOUSE_TYPE(multicall: true): MulticallRequest<string>
    AUCTION_HOUSE_TYPE(
        multicall?: true
    ): Promise<string> | MulticallRequest<string> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"AUCTION_HOUSE_TYPE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [], multicall)
    }

    abandonUncoverSystem(accountingEngine: string): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"accountingEngine","type":"address"}],"name":"abandonUncoverSystem","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [accountingEngine])
    }

    addAuthorization(account: string): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addAuthorization","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [account])
    }

    addRightsCooldown(): Promise<BigNumber>
    addRightsCooldown(multicall: true): MulticallRequest<BigNumber>
    addRightsCooldown(
        multicall?: true
    ): Promise<BigNumber> | MulticallRequest<BigNumber> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"addRightsCooldown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [], multicall)
    }

    allowedSystems(
        address: string
    ): Promise<{
        covered: boolean
        revokeRightsDeadline: BigNumber
        uncoverCooldownEnd: BigNumber
        withdrawAddedRightsDeadline: BigNumber
        previousDebtAuctionHouse: string
        currentDebtAuctionHouse: string
    }>
    allowedSystems(
        address: string,
        multicall: true
    ): MulticallRequest<{
        covered: boolean
        revokeRightsDeadline: BigNumber
        uncoverCooldownEnd: BigNumber
        withdrawAddedRightsDeadline: BigNumber
        previousDebtAuctionHouse: string
        currentDebtAuctionHouse: string
    }>
    allowedSystems(
        address: string,
        multicall?: true
    ):
        | Promise<{
              covered: boolean
              revokeRightsDeadline: BigNumber
              uncoverCooldownEnd: BigNumber
              withdrawAddedRightsDeadline: BigNumber
              previousDebtAuctionHouse: string
              currentDebtAuctionHouse: string
          }>
        | MulticallRequest<{
              covered: boolean
              revokeRightsDeadline: BigNumber
              uncoverCooldownEnd: BigNumber
              withdrawAddedRightsDeadline: BigNumber
              previousDebtAuctionHouse: string
              currentDebtAuctionHouse: string
          }> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"allowedSystems","outputs":[{"internalType":"bool","name":"covered","type":"bool"},{"internalType":"uint256","name":"revokeRightsDeadline","type":"uint256"},{"internalType":"uint256","name":"uncoverCooldownEnd","type":"uint256"},{"internalType":"uint256","name":"withdrawAddedRightsDeadline","type":"uint256"},{"internalType":"address","name":"previousDebtAuctionHouse","type":"address"},{"internalType":"address","name":"currentDebtAuctionHouse","type":"address"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [address], multicall)
    }

    authorizedAccounts(address: string): Promise<BigNumber>
    authorizedAccounts(
        address: string,
        multicall: true
    ): MulticallRequest<BigNumber>
    authorizedAccounts(
        address: string,
        multicall?: true
    ): Promise<BigNumber> | MulticallRequest<BigNumber> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedAccounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [address], multicall)
    }

    coverSystem(accountingEngine: string): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"accountingEngine","type":"address"}],"name":"coverSystem","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [accountingEngine])
    }

    coveredSystems(): Promise<BigNumber>
    coveredSystems(multicall: true): MulticallRequest<BigNumber>
    coveredSystems(
        multicall?: true
    ): Promise<BigNumber> | MulticallRequest<BigNumber> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"coveredSystems","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [], multicall)
    }

    denyRightsCooldown(): Promise<BigNumber>
    denyRightsCooldown(multicall: true): MulticallRequest<BigNumber>
    denyRightsCooldown(
        multicall?: true
    ): Promise<BigNumber> | MulticallRequest<BigNumber> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"denyRightsCooldown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [], multicall)
    }

    endUncoverSystem(accountingEngine: string): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"accountingEngine","type":"address"}],"name":"endUncoverSystem","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [accountingEngine])
    }

    giveUpAuthorityOwnership(): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"giveUpAuthorityOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [])
    }

    giveUpAuthorityRoot(): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"giveUpAuthorityRoot","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [])
    }

    modifyParameters(
        parameter: BytesLike,
        data: BigNumberish
    ): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"bytes32","name":"parameter","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"modifyParameters","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [parameter, data])
    }

    proposeIndefinitePrintingPermissions(
        accountingEngine: string,
        freezeDelay: BigNumberish
    ): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"accountingEngine","type":"address"},{"internalType":"uint256","name":"freezeDelay","type":"uint256"}],"name":"proposeIndefinitePrintingPermissions","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [accountingEngine, freezeDelay])
    }

    protocolTokenAuthority(): Promise<string>
    protocolTokenAuthority(multicall: true): MulticallRequest<string>
    protocolTokenAuthority(
        multicall?: true
    ): Promise<string> | MulticallRequest<string> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"protocolTokenAuthority","outputs":[{"internalType":"contract ProtocolTokenAuthorityLike","name":"","type":"address"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [], multicall)
    }

    removeAuthorization(account: string): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeAuthorization","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [account])
    }

    removePreviousDebtAuctionHouse(
        accountingEngine: string
    ): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"accountingEngine","type":"address"}],"name":"removePreviousDebtAuctionHouse","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [accountingEngine])
    }

    startUncoverSystem(accountingEngine: string): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"accountingEngine","type":"address"}],"name":"startUncoverSystem","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [accountingEngine])
    }

    unrevokableRightsCooldown(): Promise<BigNumber>
    unrevokableRightsCooldown(multicall: true): MulticallRequest<BigNumber>
    unrevokableRightsCooldown(
        multicall?: true
    ): Promise<BigNumber> | MulticallRequest<BigNumber> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[],"name":"unrevokableRightsCooldown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [], multicall)
    }

    updateCurrentDebtAuctionHouse(
        accountingEngine: string
    ): TransactionRequest {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"accountingEngine","type":"address"}],"name":"updateCurrentDebtAuctionHouse","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.getTransactionRequest(abi, [accountingEngine])
    }

    usedAuctionHouses(address: string): Promise<BigNumber>
    usedAuctionHouses(
        address: string,
        multicall: true
    ): MulticallRequest<BigNumber>
    usedAuctionHouses(
        address: string,
        multicall?: true
    ): Promise<BigNumber> | MulticallRequest<BigNumber> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"usedAuctionHouses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}

        return this.ethCallOrMulticall(abi, [address], multicall)
    }
}
