/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { BytesLike } from '@ethersproject/bytes'

import { BigNumberish } from '@ethersproject/bignumber'

import { BigNumber } from '@ethersproject/bignumber'

import { BaseContractAPI } from '@reflexer-finance/geb-provider'

export class GebProxyActionsGlobalSettlement<TX_OBJ> extends BaseContractAPI<
    TX_OBJ
> {
    coinJoin_join(
        apt: string,
        safeHandler: string,
        wad: BigNumberish
    ): Promise<TX_OBJ> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"apt","type":"address"},{"internalType":"address","name":"safeHandler","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"coinJoin_join","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.chainProvider.ethSend(this.address, abi, [
            apt,
            safeHandler,
            wad,
        ])
    }

    freeETH(
        manager: string,
        ethJoin: string,
        globalSettlement: string,
        safe: BigNumberish
    ): Promise<TX_OBJ> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"address","name":"globalSettlement","type":"address"},{"internalType":"uint256","name":"safe","type":"uint256"}],"name":"freeETH","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.chainProvider.ethSend(this.address, abi, [
            manager,
            ethJoin,
            globalSettlement,
            safe,
        ])
    }

    freeTokenCollateral(
        manager: string,
        collateralJoin: string,
        globalSettlement: string,
        safe: BigNumberish
    ): Promise<TX_OBJ> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"collateralJoin","type":"address"},{"internalType":"address","name":"globalSettlement","type":"address"},{"internalType":"uint256","name":"safe","type":"uint256"}],"name":"freeTokenCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.chainProvider.ethSend(this.address, abi, [
            manager,
            collateralJoin,
            globalSettlement,
            safe,
        ])
    }

    prepareCoinsForRedeeming(
        coinJoin: string,
        globalSettlement: string,
        wad: BigNumberish
    ): Promise<TX_OBJ> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"coinJoin","type":"address"},{"internalType":"address","name":"globalSettlement","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"prepareCoinsForRedeeming","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.chainProvider.ethSend(this.address, abi, [
            coinJoin,
            globalSettlement,
            wad,
        ])
    }

    redeemETH(
        ethJoin: string,
        globalSettlement: string,
        collateralType: BytesLike,
        wad: BigNumberish
    ): Promise<TX_OBJ> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"address","name":"globalSettlement","type":"address"},{"internalType":"bytes32","name":"collateralType","type":"bytes32"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"redeemETH","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.chainProvider.ethSend(this.address, abi, [
            ethJoin,
            globalSettlement,
            collateralType,
            wad,
        ])
    }

    redeemTokenCollateral(
        collateralJoin: string,
        globalSettlement: string,
        collateralType: BytesLike,
        wad: BigNumberish
    ): Promise<TX_OBJ> {
        // prettier-ignore
        // @ts-ignore
        const abi = {"inputs":[{"internalType":"address","name":"collateralJoin","type":"address"},{"internalType":"address","name":"globalSettlement","type":"address"},{"internalType":"bytes32","name":"collateralType","type":"bytes32"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"redeemTokenCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"}

        return this.chainProvider.ethSend(this.address, abi, [
            collateralJoin,
            globalSettlement,
            collateralType,
            wad,
        ])
    }
}
