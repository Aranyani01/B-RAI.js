/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { BytesLike } from '@ethersproject/bytes'
import { BigNumber, BigNumberish } from '@ethersproject/bignumber'
import { BaseContractAPI } from '@reflexer-finance/geb-provider'

export class SafeEngine<TX_OBJ> extends BaseContractAPI<TX_OBJ> {
    addAuthorization(account: string): TX_OBJ {
        return this.chainProvider.ethSend('addAuthorization', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    approveSAFEModification(account: string): TX_OBJ {
        return this.chainProvider.ethSend('approveSAFEModification', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    authorizedAccounts(arg0: string): Promise<BigNumber> {
        return this.chainProvider.ethCall('authorizedAccounts', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    canModifySAFE(safe: string, account: string): Promise<boolean> {
        return this.chainProvider.ethCall('canModifySAFE', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    coinBalance(arg0: string): Promise<BigNumber> {
        return this.chainProvider.ethCall('coinBalance', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    collateralTypes(
        arg0: BytesLike
    ): Promise<{
        debtAmount: BigNumber
        accumulatedRate: BigNumber
        safetyPrice: BigNumber
        debtCeiling: BigNumber
        debtFloor: BigNumber
        liquidationPrice: BigNumber
    }> {
        return this.chainProvider.ethCall('collateralTypes', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    confiscateSAFECollateralAndDebt(
        collateralType: BytesLike,
        safe: string,
        collateralCounterparty: string,
        debtCounterparty: string,
        deltaCollateral: BigNumberish,
        deltaDebt: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('confiscateSAFECollateralAndDebt', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    contractEnabled(): Promise<BigNumber> {
        return this.chainProvider.ethCall('contractEnabled', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    createUnbackedDebt(
        debtDestination: string,
        coinDestination: string,
        rad: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('createUnbackedDebt', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    debtBalance(arg0: string): Promise<BigNumber> {
        return this.chainProvider.ethCall('debtBalance', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    denySAFEModification(account: string): TX_OBJ {
        return this.chainProvider.ethSend('denySAFEModification', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    disableContract(): TX_OBJ {
        return this.chainProvider.ethSend('disableContract', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    globalDebt(): Promise<BigNumber> {
        return this.chainProvider.ethCall('globalDebt', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    globalDebtCeiling(): Promise<BigNumber> {
        return this.chainProvider.ethCall('globalDebtCeiling', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    globalUnbackedDebt(): Promise<BigNumber> {
        return this.chainProvider.ethCall('globalUnbackedDebt', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    initializeCollateralType(collateralType: BytesLike): TX_OBJ {
        return this.chainProvider.ethSend('initializeCollateralType', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    modifyCollateralBalance(
        collateralType: BytesLike,
        account: string,
        wad: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('modifyCollateralBalance', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    modifyParameters(
        collateralType: BytesLike,
        parameter: BytesLike,
        data: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('modifyParameters', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    modifySAFECollateralization(
        collateralType: BytesLike,
        safe: string,
        collateralSource: string,
        debtDestination: string,
        deltaCollateral: BigNumberish,
        deltaDebt: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('modifySAFECollateralization', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    removeAuthorization(account: string): TX_OBJ {
        return this.chainProvider.ethSend('removeAuthorization', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    safeRights(arg0: string, arg1: string): Promise<BigNumber> {
        return this.chainProvider.ethCall('safeRights', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    safes(
        arg0: BytesLike,
        arg1: string
    ): Promise<{
        lockedCollateral: BigNumber
        generatedDebt: BigNumber
    }> {
        return this.chainProvider.ethCall('safes', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    settleDebt(rad: BigNumberish): TX_OBJ {
        return this.chainProvider.ethSend('settleDebt', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    tokenCollateral(arg0: BytesLike, arg1: string): Promise<BigNumber> {
        return this.chainProvider.ethCall('tokenCollateral', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    transferCollateral(
        collateralType: BytesLike,
        src: string,
        dst: string,
        wad: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('transferCollateral', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    transferInternalCoins(src: string, dst: string, rad: BigNumberish): TX_OBJ {
        return this.chainProvider.ethSend('transferInternalCoins', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    transferSAFECollateralAndDebt(
        collateralType: BytesLike,
        src: string,
        dst: string,
        deltaCollateral: BigNumberish,
        deltaDebt: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('transferSAFECollateralAndDebt', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }

    updateAccumulatedRate(
        collateralType: BytesLike,
        surplusDst: string,
        rateMultiplier: BigNumberish
    ): TX_OBJ {
        return this.chainProvider.ethSend('updateAccumulatedRate', {}) // TODO: Spread args here (maybe we need to use the overload thing..)
    }
}
